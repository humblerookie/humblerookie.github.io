{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/exploring-recent-kotlin-apis/","result":{"data":{"site":{"siteMetadata":{"title":"Anvith Bhat | My Blog","subtitle":"I'm passionate about creating stuff around android. Be vary, observations may be interlaced with humor.","copyright":"© All rights reserved.","author":{"name":"Anvith Bhat","twitter":"anv1th"},"disqusShortname":"anvith","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"c3896c3d-b92c-582b-8108-4af312f7f10b","html":"<p><img src=\"https://i.postimg.cc/WzZ36DDw/art.png\" alt=\"Banner graphic Kotlin\"></p>\n<p>The recent releases of Kotlin have brought through a rich set of apis in a particular the upcoming <code class=\"language-text\">1.4</code> releases. Let’s take a dive into some of the more prominent changes including modifications to the std lib.</p>\n<h2>Fun Interfaces: SAM Conversions</h2>\n<p>Starting <code class=\"language-text\">1.4</code>, Kotlin allows us to use a more idiomatic lambda syntax for SAM classes built in Kotlin. So your typical interfaces can be prefixed with <code class=\"language-text\">fun</code>, which allows for a neat little lambda instantiation as shown below.</p>\n<p><div id=\"gist104403861\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-parser-kt\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-kotlin \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-parser-kt-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-parser-kt-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span>fun keyword is allowed on interfaces</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-parser-kt-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-parser-kt-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">fun</span> <span class=\"pl-en\">interface</span> <span class=\"pl-en\">Parser</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-parser-kt-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-parser-kt-LC3\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-en\">fun</span> <span class=\"pl-en\">parse</span>(<span class=\"pl-smi\">value</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">ParsedOutput</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-parser-kt-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-parser-kt-LC4\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-parser-kt-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-parser-kt-LC5\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-parser-kt-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-parser-kt-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">data</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">ParsedOutput</span>(<span class=\"pl-k\">val</span> <span class=\"pl-smi\">header</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>, <span class=\"pl-k\">val</span> <span class=\"pl-smi\">body</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>)</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/humblerookie/325712f8a2434f1a812b939a2d85b62f/raw/c1be34a62f3f8c3df19fef44f3e7291f366584f9/Parser.kt\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/humblerookie/325712f8a2434f1a812b939a2d85b62f#file-parser-kt\">Parser.kt</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<p>As you can see instead of the earlier boilerplate (shown below), we have neat little lambda for our anonymous <code class=\"language-text\">Parser</code> instance.</p>\n<p><div id=\"gist104404442\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-parserinstance-kt\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-kotlin \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-parserinstance-kt-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-parserinstance-kt-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">fun</span> <span class=\"pl-en\">oldInstantiation</span>() {</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-parserinstance-kt-LC2\" class=\"blob-code blob-code-inner js-file-line\">   <span class=\"pl-k\">val</span> defaultParser <span class=\"pl-k\">=</span> <span class=\"pl-k\">object</span> <span class=\"pl-k\">:</span> <span class=\"pl-en\">Parser</span>{</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-parserinstance-kt-LC3\" class=\"blob-code blob-code-inner js-file-line\">      <span class=\"pl-k\">override</span> <span class=\"pl-k\">fun</span> <span class=\"pl-en\">parse</span>(<span class=\"pl-smi\">value</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">ParsedOutput</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-parserinstance-kt-LC4\" class=\"blob-code blob-code-inner js-file-line\">         require(value.length <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">4</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-parserinstance-kt-LC5\" class=\"blob-code blob-code-inner js-file-line\">         <span class=\"pl-en\">ParsedOutput</span>(value.substring(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">3</span>), value.substring(<span class=\"pl-c1\">3</span>, value.length))</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-parserinstance-kt-LC6\" class=\"blob-code blob-code-inner js-file-line\">      }</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-parserinstance-kt-LC7\" class=\"blob-code blob-code-inner js-file-line\">   } </td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-parserinstance-kt-LC8\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-parserinstance-kt-LC9\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-parserinstance-kt-LC10\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">fun</span> <span class=\"pl-en\">newInstantiation</span>() {</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-parserinstance-kt-LC11\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">val</span> defaultParser <span class=\"pl-k\">=</span> <span class=\"pl-en\">Parser</span> { value <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-parserinstance-kt-LC12\" class=\"blob-code blob-code-inner js-file-line\">        require(value.length <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">4</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-parserinstance-kt-LC13\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-en\">ParsedOutput</span>(value.substring(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">3</span>), value.substring(<span class=\"pl-c1\">3</span>, value.length))</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-parserinstance-kt-LC14\" class=\"blob-code blob-code-inner js-file-line\">    }</td>\n      </tr>\n      <tr>\n        <td id=\"file-parserinstance-kt-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-parserinstance-kt-LC15\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/humblerookie/2ce3221d5138a109035dce144ad970fc/raw/e5103e045644cd4a3fe75296016d3065ad5626e3/ParserInstance.kt\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/humblerookie/2ce3221d5138a109035dce144ad970fc#file-parserinstance-kt\">ParserInstance.kt</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h2>Elegant Deprecations: Delegate to another property</h2>\n<p>Kotlin <code class=\"language-text\">1.4</code> allows us to delegate a property initialization to another property. This allows us to rename or refactor fields without breaking the api for existing consumers.</p>\n<p>A simple example would be where a field is renamed</p>\n<p><div id=\"gist104422510\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-vehicle-kt\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-kotlin \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-vehicle-kt-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-vehicle-kt-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">class</span> <span class=\"pl-en\">Vehicle</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-vehicle-kt-LC2\" class=\"blob-code blob-code-inner js-file-line\">   <span class=\"pl-k\">var</span> id<span class=\"pl-k\">:</span> <span class=\"pl-c1\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-vehicle-kt-LC3\" class=\"blob-code blob-code-inner js-file-line\">   <span class=\"pl-k\">@Deprecated</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Use &#39;id&#39; instead<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-en\">ReplaceWith</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>id<span class=\"pl-pds\">&quot;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-vehicle-kt-LC4\" class=\"blob-code blob-code-inner js-file-line\">   <span class=\"pl-k\">var</span> vehicleId<span class=\"pl-k\">:</span> <span class=\"pl-c1\">Int</span> by <span class=\"pl-c1\">this</span>::id</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-vehicle-kt-LC5\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/humblerookie/1e265dc580b4eebcccb39b019537d83e/raw/31fd40f97f01c26697fc46a2ed24b309a8dcdbf4/Vehicle.kt\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/humblerookie/1e265dc580b4eebcccb39b019537d83e#file-vehicle-kt\">Vehicle.kt</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<p>Notice how we’ve renamed this field without breaking the contract with the classes that have been using this field.</p>\n<p>Consider a more useful/real world variant. Lets say we had a class <code class=\"language-text\">Vehicle</code> with only two types a car and a cycle. We initially decided to model this with a single <strong>boolean</strong> called <code class=\"language-text\">isCar</code>.</p>\n<p><div id=\"gist104422477\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-vehicle-kt\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-kotlin \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-vehicle-kt-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-vehicle-kt-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">class</span> <span class=\"pl-en\">Vehicle</span>(<span class=\"pl-k\">val</span> <span class=\"pl-smi\">isCar</span><span class=\"pl-k\">:</span><span class=\"pl-c1\">Boolean</span>)</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/humblerookie/3551fe106f6d758b54c60980c4e3ebc2/raw/66933471a4a0de4123c622b033a414d4a701d5bd/Vehicle.kt\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/humblerookie/3551fe106f6d758b54c60980c4e3ebc2#file-vehicle-kt\">Vehicle.kt</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<p>However later you realise you need to build more variants of these vehicles and need to remodel your data type. You can do this gracefully by coupling the new feature of delegating to another property along with a small extension function.</p>\n<p><div id=\"gist104422456\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-vehicle-kt\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-kotlin \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-vehicle-kt-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-vehicle-kt-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">class</span> <span class=\"pl-en\">Vehicle</span>(<span class=\"pl-k\">val</span> <span class=\"pl-smi\">type</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">VehicleType</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">VehicleType</span>.<span class=\"pl-en\">CYCLE</span>) {</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-vehicle-kt-LC2\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-vehicle-kt-LC3\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">@Deprecated</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Use &#39;type&#39;, instead<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-en\">ReplaceWith</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>type<span class=\"pl-pds\">&quot;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-vehicle-kt-LC4\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">val</span> isCar<span class=\"pl-k\">:</span> <span class=\"pl-c1\">Boolean</span> by <span class=\"pl-c1\">this</span>::type</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-vehicle-kt-LC5\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-vehicle-kt-LC6\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">@Deprecated</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Use constructor with &#39;type&#39; info instead<span class=\"pl-pds\">&quot;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-vehicle-kt-LC7\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-en\">constructor</span> (<span class=\"pl-smi\">isCar</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">Boolean</span>) <span class=\"pl-k\">:</span> <span class=\"pl-c1\">this</span>(<span class=\"pl-k\">if</span> (isCar) <span class=\"pl-en\">VehicleType</span>.<span class=\"pl-en\">CAR</span> <span class=\"pl-k\">else</span> <span class=\"pl-en\">VehicleType</span>.<span class=\"pl-en\">CYCLE</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-vehicle-kt-LC8\" class=\"blob-code blob-code-inner js-file-line\">    </td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-vehicle-kt-LC9\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">enum</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">VehicleType</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-vehicle-kt-LC10\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-en\">CYCLE</span>, <span class=\"pl-en\">CAR</span>, <span class=\"pl-en\">TRUCK</span>, <span class=\"pl-en\">SHIP</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-vehicle-kt-LC11\" class=\"blob-code blob-code-inner js-file-line\">    }</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-vehicle-kt-LC12\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-vehicle-kt-LC13\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">operator</span> <span class=\"pl-k\">fun</span> <span class=\"pl-en\">KProperty</span><span class=\"pl-k\">&lt;</span><span class=\"pl-k\">*</span>&gt;.<span class=\"pl-en\">getValue</span>(</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-vehicle-kt-LC14\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-smi\">vehicle</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Vehicle</span>,</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-vehicle-kt-LC15\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-smi\">property</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">KProperty</span><span class=\"pl-k\">&lt;</span><span class=\"pl-k\">*</span><span class=\"pl-k\">&gt;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-vehicle-kt-LC16\" class=\"blob-code blob-code-inner js-file-line\">    )<span class=\"pl-k\">:</span> <span class=\"pl-c1\">Boolean</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-vehicle-kt-LC17\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return</span> vehicle.type <span class=\"pl-k\">==</span> <span class=\"pl-en\">VehicleType</span>.<span class=\"pl-en\">CAR</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-vehicle-kt-LC18\" class=\"blob-code blob-code-inner js-file-line\">    }</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-vehicle-kt-LC19\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-vehicle-kt-LC20\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-vehicle-kt-LC21\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-vehicle-kt-LC22\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">fun</span> <span class=\"pl-en\">main</span>() {</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-vehicle-kt-LC23\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">val</span> vehicle <span class=\"pl-k\">=</span> <span class=\"pl-en\">Vehicle</span>(<span class=\"pl-en\">Vehicle.VehicleType</span>.<span class=\"pl-en\">TRUCK</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-vehicle-kt-LC24\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-vehicle-kt-LC25\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span>Below line would throw a deprecated warning</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-vehicle-kt-LC26\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">println</span>(vehicle.isCar)</td>\n      </tr>\n      <tr>\n        <td id=\"file-vehicle-kt-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-vehicle-kt-LC27\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/humblerookie/b0f36d6dd086ec9692b4a2dcd249be31/raw/a2b8b6d0cb7ee726fbd88c8df4fd8eebf9d18f69/Vehicle.kt\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/humblerookie/b0f36d6dd086ec9692b4a2dcd249be31#file-vehicle-kt\">Vehicle.kt</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h2>Standard library additions</h2>\n<ul>\n<li><code class=\"language-text\">scan</code> : This operator was added to the collections framework. Its essentially the equivalent of using <code class=\"language-text\">fold</code> with a <code class=\"language-text\">map</code> operation. <code class=\"language-text\">scan</code> returns a transformed version of the current collection where the transforming lambda has access to the <em>accumulated</em> value in order to compute the new value. Here’s an illustration from the official documentation.\n<img src=\"https://blog.jetbrains.com/wp-content/uploads/2020/02/kotlin-scanFold.gif\" alt=\"Scan diagram\"></li>\n<li><strong>Builders</strong>: <code class=\"language-text\">buildList</code>, <code class=\"language-text\">buildMap</code> are efficient ways to build read only lists and maps respectively for cases where the members aren’t straightforward or need to be computed from multiple sources. Here’s how you’d use it</li>\n</ul>\n<p><div id=\"gist104423034\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-builders-kt\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-kotlin \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-builders-kt-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-builders-kt-LC1\" class=\"blob-code blob-code-inner js-file-line\"> <span class=\"pl-k\">val</span> allowedDisplayCodes <span class=\"pl-k\">=</span> buildList<span class=\"pl-k\">&lt;</span><span class=\"pl-c1\">Int</span><span class=\"pl-k\">&gt;</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-builders-kt-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-builders-kt-LC2\" class=\"blob-code blob-code-inner js-file-line\">        addAll(currentDisplayCodes)</td>\n      </tr>\n      <tr>\n        <td id=\"file-builders-kt-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-builders-kt-LC3\" class=\"blob-code blob-code-inner js-file-line\">        add(selectedCode)</td>\n      </tr>\n      <tr>\n        <td id=\"file-builders-kt-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-builders-kt-LC4\" class=\"blob-code blob-code-inner js-file-line\">        addAll(discounts.map { it.itemCode })</td>\n      </tr>\n      <tr>\n        <td id=\"file-builders-kt-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-builders-kt-LC5\" class=\"blob-code blob-code-inner js-file-line\">  }</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/humblerookie/9d23ed7de78739e7d37da7304e236cd9/raw/68ad55e7f988209c8e9029754f04bc2e532cd14d/Builders.kt\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/humblerookie/9d23ed7de78739e7d37da7304e236cd9#file-builders-kt\">Builders.kt</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<p>There are a few more additions, you can check the entire list <a href=\"https://github.com/JetBrains/kotlin/blob/1.3.70/ChangeLog.md#new-features-5\">here</a>.</p>\n<h2>Parting thoughts</h2>\n<p>Both <code class=\"language-text\">1.4</code> and <code class=\"language-text\">1.3.7x</code> releases have introduced some neat changes which we can make use of especially in the standard library. Do give them a go.</p>","fields":{"tagSlugs":["/tags/kotlin/","/tags/android/"],"slug":"/posts/exploring-recent-kotlin-apis/"},"frontmatter":{"title":"Exploring Recent Kotlin APIs","tags":["Kotlin","Android"],"date":"2020-07-18T16:51:00.000Z","description":"We take a look at some of the more prominent api changes in Kotlin 1.3.7x and 1.4.x preview releases."}}},"pageContext":{"slug":"/posts/exploring-recent-kotlin-apis/"}},"staticQueryHashes":[]}